name: Deploy React to OVH (SSH)

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Create views directory structure
      run: |
        mkdir -p temp_views
        cp dist/index.html temp_views/stagiaire.blade.php

    - name: Deploy public assets via SSH (rsync)
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key

        echo "➤ Cleaning old index assets on server..."
        ssh -i private_key -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "rm -f ~/www/public/assets/index-*.css ~/www/public/assets/index-*.js ~/www/public/assets/vendor-*.js"
        echo "✓ Old assets cleaned"

        echo "➤ Deploying new assets..."
        rsync -avz --exclude='index.html' -e "ssh -i private_key -o StrictHostKeyChecking=no" ./dist/ $REMOTE_USER@$REMOTE_HOST:./www/public/
        echo "✓ Assets deployed"

        rm -f private_key

    - name: Deploy Blade template via SSH (stagiaire.blade.php)
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key
        rsync -avz -e "ssh -i private_key -o StrictHostKeyChecking=no" ./temp_views/stagiaire.blade.php $REMOTE_USER@$REMOTE_HOST:./www/resources/views/
        rm -f private_key

    - name: Execute deployment via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        timeout: 30s
        script_stop: true
        script: |
          set -e
          cd ~/www

          echo "➤ Optimizing Laravel..."
          php artisan optimize:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          echo "✓ Application optimized"

          php artisan queue:restart
          echo "✓ Queue restarted"

          echo "➤ Fixing permissions..."
          chmod -R 755 storage
          chmod -R 755 bootstrap/cache
          echo "✓ Permissions set"

          php artisan optimize:clear

    - name: Clean temporary files
      run: rm -rf temp_views
